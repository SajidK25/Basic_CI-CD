version: "3"

# networks:
#   traefik-net:
#     external: true 
  
services:
  web-dev:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    container_name: fsit-web-dev
    restart: on-failure
    volumes:
      - .:/code
    command: bash -c "python manage.py runserver 0.0.0.0:8000 --settings=fsit.settings_local"
    ports:
      - "8888:8000"
    # depends_on:
    #   - db
    # networks:
    #   - default
  # db:
  #   image: postgres:15
  #   container_name: fsit-db
  #   environment:
  #     - POSTGRES_DB=${PG_DATABASE}
  #     - POSTGRES_USER=${PG_USER}
  #     - POSTGRES_PASSWORD=${PG_PASSWORD}
  #     - POSTGRES_HOST=${PG_HOST}
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./data/postgres/:/var/lib/postgresql/data
  #   networks:
  #     - default

  # nginx:
  #   image: "nginx"
  #   container_name: fsit-nginx
  #   labels:
  #     traefik.docker.network: "traefik-net"
  #     traefik.enable: "true"
  #     traefik.http.routers.nginx.entrypoints: "https"
  #     traefik.http.routers.nginx.middlewares: "default@file"
  #     traefik.http.routers.nginx.rule: "Host(`${PROJECT_SUBDOMAIN}.${PROJECT_DOMAIN}`)"
  #     traefik.http.routers.nginx.tls.certresolver: "letsEncrypt"
  #     traefik.http.routers.nginx.tls.options: "modern@file"
  #     traefik.http.routers.nginx.tls: "true"
  #     traefik.http.services.nginx.loadbalancer.server.port: 80
  #     traefik.http.services.nginx.loadbalancer.sticky.cookie.httpOnly: "true"
  #     traefik.http.services.nginx.loadbalancer.sticky.cookie.secure: "true"
  #   restart: always
  #   volumes:
  #     - ./config/nginx/conf.d:/etc/nginx/conf.d
  #     - ./static:/code/static
  #     - ./mediafiles:/code/mediafiles
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - web
  #   networks:
  #     - traefik-net
  #     - default
